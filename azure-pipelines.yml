# Python test sample
# Sample that demonstrates how to leverage the parallel jobs capability of Azure Pipelines to run python tests in parallel.
# Parallelizing tests helps in reducing the time spent in testing and can speed up the pipelines significantly.
trigger:
  - none

pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build
    jobs:
      - job: "j1"
        steps:
          - task: Bash@3
            inputs:
              targetType: "inline"
              script: |
                # Write your commands here

                echo 'Hello world'


  - stage: ArtifactAndPackage
    jobs:
          - job: 'j2'
            steps:
            - task: ServiceNow-DevOps-Agent-Artifact-Registration@1
              inputs:
                connectedServiceName: 'empdsingh2-TestReleasePipeline-ServiceNow DevOps Service Connection'
                artifactsPayload: |
                  {
                  "artifacts": [
                  {
                  "name": "Builddrop-1",
                  "version": "1.$(Build.BuildId)",
                  "semanticVersion": "1.$(Build.BuildId).0",
                  "repositoryName": "testpipeline"
                  }
                  ]
                  }
          
            - task: ServiceNow-DevOps-Agent-Package-Registration@1
              inputs:
                connectedServiceName: 'empdsingh2-TestReleasePipeline-ServiceNow DevOps Service Connection'
                packageName: 'Package1'
                artifactsPayload: |
                  {
                  "artifacts": [
                  {
                  "name": "Builddrop-1",
                  "version": "1.$(Build.BuildId)",
                  "semanticVersion": "1.$(Build.BuildId).0",
                  "repositoryName": "testpipeline"
                  }
                  ]
                  }
  - stage: Test
    jobs:

    - job: 'ParallelTesting'
      strategy:
        parallel: 3

      steps:
      - task: UsePythonVersion@0
        displayName: 'Use Python 3.x'

      - script: 'python -m pip install --upgrade pip && pip install -r $(System.DefaultWorkingDirectory)/requirements.txt' 
        displayName: 'Install dependencies'

      - powershell: ./DistributeTests.ps1 
        displayName: 'PowerShell Script to distribute tests'

      - script: |
          echo $(pytestfiles)
          pip install pytest && pytest $(pytestfiles) --doctest-modules --junitxml=junit/test-results.xml 
        displayName: 'pytest'
        continueOnError: true

      - task: PublishTestResults@2
        displayName: 'Publish Test Results **/test-results.xml'
        inputs:
          testResultsFiles: '**/test-results.xml'
          testRunTitle: 'Python $(python.version)'
        condition: succeededOrFailed()
